Base de données:
	- La table Message va être réduite afin de ne garder que certaines données essentielles (et optimisation).
		Colonnes:
			    pk_msg_id VARCHAR(22) PRIMARY KEY NOT NULL,	// L'identifiant du message.
                s_author_id VARCHAR(22) NOT NULL,	// L'identifiant de l'auteur du message
                s_channel_id VARCHAR(22) NOT NULL,	// L'identifiant du salon pour fetch le message.
                n_likes INT NOT NULL,		// Le nombre de likes.
                b_stf TINYINT NOT NULL,		// Envoyé dans le feed.
                b_stt TINYINT NOT NULL,		// Envoyé sur twitter.
                b_str TINYINT NOT NULL,		// Envoyé sur reddit.
                b_repost TINYINT NOT NULL,	// Si le message a été supprimé pour respost.
                n_date INT NOT NULL		// La date d'envoi convertie en mois.
    - La table moyenne est supprimée car inutile, les données de la moyenne seront gardées dans le module Moyenne.
    - Toutes les autres tables ne changent pas.


Le dossier utils:
	- Ce dossier existera toujours car il contiendra certaines fonctions n'appartenant à aucun modules.
	- Exemples: loadAssets, userUtils(?), dateUtils, messageUtils(?).


Modules:
	- Chaque fonctionnalité du bot est présente sous la forme d'un module.
	- Tout les modules seront instanciés comme des attributs du client.
	- Un fichier JSON gardera trace des modules activés/désactivés.
	- Une commande permettra d'activer/désactiver les modules (et du coup update le json précédemment cité).
	- Les modules seront chargés une fois le client lancé avec une fonction du fichier loadAssets.js.
	- Chaque module contient les attributs/méthodes suivantes:
		ATTRIBUTS:
			- active	// indique si le module est activé.
			- client	// Le client du bot.
		METHODES:
			- toutes les méthodes de la base de données liées à ce module.
			- les méthodes liées aux évènements.
	- Liste des modules prévus:
		- Database: contiendra les fonctions lambda de la db (getConnection, etc). (exception, toujours actif).
		- Likes: inclus le système de Repost.
		- Feed:
		- Levels:
		- Moyenne:
			- Le nombre de memes requis pour la moyenne pourront être modifiés avec une slashCommand.
			- Une moyenne de base sera utilisée pour instancier le module (variable env) et le tant que la première
			  itération du calcul de la moyenne se fasse.


Fichiers de configuration:
	- Les fichiers de configuration authKey.json et config.json vont être remplacé par un fichier .env.local.