/**
 * @author Benjamin Guirlet
 * @description
 *      Contains the command 'feed'.
 *      It allows the administrators to define in which channel the feed feature is enabled.
 */


const { SlashCommandBuilder } = require( "@discordjs/builders" );
const { CommandInteraction } = require( "discord.js" );
const sqlUtils = require( "../../utils/sqlUtils" );


/* ----------------------------------------------- */
/* COMMAND BUILD                                   */
/* ----------------------------------------------- */
const slashCommand = new SlashCommandBuilder()
	.setName( "feed" )
	.setDescription( "Permet de définir ou désactiver le salon du feed pour le bot." )
	.setDefaultPermission( false )
	.addSubcommand( subCommand =>
		subCommand
			.setName( "set" )
			.setDescription( "Défini le salon courant comme le salon du feed." )
	)
	.addSubcommand( subCommand =>
		subCommand
			.setName( "remove" )
			.setDescription( "Désactive le salon du feed." )
	);


/* ----------------------------------------------- */
/* FUNCTIONS                                       */
/* ----------------------------------------------- */
/**
 * Function called when the command 'feed'
 * @param {CommandInteraction} interaction The interaction generated by the command's execution.
 */
async function execute( interaction ) {
	let feedChannel;
	switch ( interaction.options.getSubcommand() ) {
		case 'set':
			// We're removing the precedent feed channel if there is one because there can be only one at the same time.
			feedChannel = await sqlUtils.fetchChannelsByType( "feed" );
			if ( feedChannel.length )
				await sqlUtils.updateChannel( feedChannel[0].channel_id, "feed", false )

			await sqlUtils.updateChannel( interaction.channelId, "feed", true );
			await interaction.reply(
				{ content: "Ce salon est maintenant le salon du feed!", ephemeral: true }
			);
			break;
		case 'remove':
			feedChannel = await sqlUtils.fetchChannelsByType( "feed" );

			if ( feedChannel.length ) {
				await sqlUtils.updateChannel( feedChannel[0].channel_id, "feed", false );
				await interaction.reply(
					{ content: "Le salon du feed a été désactivé!", ephemeral: true }
				);
				break;
			}
			await interaction.reply(
				{ content: "Il n'y a pas de salon du feed déjà défini!", ephemeral: true }
			);
	}
}


/* ----------------------------------------------- */
/* MODULE EXPORTS                                  */
/* ----------------------------------------------- */
module.exports = {
	data: slashCommand,
	execute
}